library(seacarb)
sessionInfo()
?carb
carb(flag=8, var1=8.2, var2=0.00234, S=35, T=25, P=0, Pt=0, Sit=0,
pHscale="T", kf="pf", k1k2="l", ks="d", b="l10")
carb(flag=8, var1=8.2, var2=0.00234, S=35, T=25, P=10, Pt=0, Sit=0,
pHscale="T", kf="pf", k1k2="l", ks="d", b="l10")
Pcoeffs
kfg
?Kf
Kf(S=35,T=25,P=0,kf="dg",pHscale="T")
kfg
Kf(S=35,T=25,P=0,kf="pf",pHscale="T")
kfg
Kf(S=35,T=25,P=0,kf="x",pHscale="T")
kfg
library(seacarb)
kfg
library(seacarb)
?.onAttach
source('~/Documents/R-forge/seacarb_folder/seacarb/R/carb.R', echo=TRUE)
install.packages("reports")
library(reports)
library(devtools)
setwd("/Volumes/Macintosh HD 2/gattuso/Documents/experiments/exp165_efoce/shared_efoce/efoce_data/efoce_science_data/")
new_report("efoce_science")
install.packages(c("cluster", "foreign", "gtools", "KernSmooth", "knitcitations", "lattice", "Matrix", "memisc", "nnet", "Rcpp", "RJSONIO", "rpart", "RWeka", "RWekajars", "shiny", "Snowball", "survival", "XML"))
install.packages("seacarb")
getxd()
getwd()
setwd("/Volumes/Macintosh HD 2/gattuso/Documents/R-forge/seacarb_folder/seacarb")
read.table(file="test_file_big.txt", header=T,sep=" ")
system("ls")
system("ls")
setwd("/Volumes/Macintosh HD 2/gattuso/Documents/R-forge/seacarb_folder")
setwd("/Volumes/Macintosh HD 2/gattuso/Documents/R-forge/seacarb_folder/")
read.table(file="test_file_big.txt", header=T,sep=" ")
dat <- read.table(file="test_file_big.txt", header=T,sep=" ")
old <- carb(dat)
new <- carbex(dat)
?carb
old <- carb(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
new <- carbex(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
library(seacarb)
new <- carbex(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
?carbex
new <- carbex(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
library(seacarb)
?carbex
carbex(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
carbex(flag=8, var1=8.2, var2=0.00234, S=35, T=25, P=0, Pt=0, Sit=0,
pHscale="T", kf="pf", k1k2="l", ks="d", b="l10")
library(seacarb)
?carbex
carbex(flag=8, var1=8.2, var2=0.00234, S=35, T=25, P=0, Pt=0, Sit=0,
pHscale="T", kf="pf", k1k2="l", ks="d", b="l10")
carb(flag=8, var1=8.2, var2=0.00234, S=35, T=25, P=0, Pt=0, Sit=0,
pHscale="T", kf="pf", k1k2="l", ks="d", b="l10")
data(seacarb_test_P0)    #test data set for P=0 (surface)
tab <- seacarb_test_P0
## method 1 using the column numbers
carbex(flag=tab[[1]], var1=tab[[2]], var2=tab[[3]], S=tab[[4]], T=tab[[5]],
P=tab[[6]], Sit=tab[[8]], Pt=tab[[7]])
testcarbex <- carbex(flag=tab[[1]], var1=tab[[2]], var2=tab[[3]], S=tab[[4]], T=tab[[5]],
P=tab[[6]], Sit=tab[[8]], Pt=tab[[7]])
names(testcarbex)
diff(testcarbex$DIC)
testcarb <- carbex(flag=tab[[1]], var1=tab[[2]], var2=tab[[3]], S=tab[[4]], T=tab[[5]],
P=tab[[6]], Sit=tab[[8]], Pt=tab[[7]])
testcarb <- carb(flag=tab[[1]], var1=tab[[2]], var2=tab[[3]], S=tab[[4]], T=tab[[5]],
P=tab[[6]], Sit=tab[[8]], Pt=tab[[7]])
diff(testcarb$DIC)
testcarb-testcarbex
summary(testcarb-testcarbex)
mean(testcarb-testcarbex)
testcarb-testcarbex
setwd("/Volumes/Macintosh HD 2/gattuso/Documents/R-forge/seacarb_folder/")
dat <- read.table(file="test_file_big.txt", header=T,sep=" ")
t1 <- system.time()
old <- carb(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
t2 <- system.time()
difftime(t2,t1,units="sec")
t1 <- system.time()
new <- carbex(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
t2 <- system.time()
difftime(t2,t1,units="sec")
?system.time
?System.time
Sys.time()
setwd("/Volumes/Macintosh HD 2/gattuso/Documents/R-forge/seacarb_folder/")
dat <- read.table(file="test_file_big.txt", header=T,sep=" ")
t1 <- Sys.time()
old <- carb(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
t2 <- Sys.time()
difftime(t2,t1,units="sec")
t1 <- Sys.time()
new <- carbex(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
t2 <- Sys.time()
difftime(t2,t1,units="sec")
t1 <- Sys.time()
old <- carb(flag=rep(8,1000), var1=rep(8.255611e+00, 1000), var2=rep(2400e-06, 1000))
t2 <- Sys.time()
difftime(t2,t1,units="sec")
t1 <- Sys.time()
new <- carbex(flag=rep(8,1000), var1=rep(8.255611e+00, 1000), var2=rep(2400e-06, 1000))
t2 <- Sys.time()
difftime(t2,t1,units="sec")
install.packages("microbenchmark")
library(microbenchmark), library(seacarb)
library(microbenchmark); library(seacarb)
microbenchmark(carb(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt))
setwd("/Volumes/Macintosh HD 2/gattuso/Documents/R-forge/seacarb_folder/")
dat <- read.table(file="test_file_big.txt", header=T,sep=" ")
t1 <- Sys.time()
old <- carb(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
t2 <- Sys.time()
print("carb", difftime(t2,t1,units="sec"))
t1 <- Sys.time()
new <- carbex(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
t2 <- Sys.time()
print("carb", difftime(t2,t1,units="sec"))
print(paste("carb", difftime(t2,t1,units="sec")))
t1 <- Sys.time()
old <- carb(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
t2 <- Sys.time()
print(paste("Time with carb:", difftime(t2,t1,units="sec")), "sec")
t1 <- Sys.time()
new <- carbex(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
t2 <- Sys.time()
print(paste("Time with carbex:", difftime(t2,t1,units="sec")), "sec")
print(paste("Time with carb:", difftime(t2,t1,units="sec"), "sec"))
?round
print(paste("Time with carb:", round(difftime(t2,t1,units="sec"), digits=1), "sec"))
t1 <- Sys.time()
old <- carb(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
t2 <- Sys.time()
print(paste("Time with carb:", round(difftime(t2,t1,units="sec"), digits=1), "sec"))
t1 <- Sys.time()
new <- carbex(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
t2 <- Sys.time()
print(paste("Time with carbex:", round(difftime(t2,t1,units="sec"), digits=1), "sec"))
library(seacarb)
setwd("/Volumes/Macintosh HD 2/gattuso/Documents/R-forge/seacarb_folder/")
dat <- read.table(file="test_file_big.txt", header=T,sep=" ")
t1 <- Sys.time()
old <- carb(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
t2 <- Sys.time()
t3 <- Sys.time()
new <- carbex(flag=dat$flag, var1=dat$var1, var2=dat$var2, S=dat$S, T=dat$T, P=dat$P,
Sit=dat$Sit, Pt=dat$Pt)
t4 <- Sys.time()
print("Check times for 1000 lines of a mix of all flags at 0 and 300 m")
print(paste("Time with carb:", round(difftime(t2,t1,units="sec"), digits=1), "sec"))
print(paste("Time with carbex:", round(difftime(t3,t4,units="sec"), digits=1), "sec"))
#--- CHECK FOR FLAG 8 ONLY
t1 <- Sys.time()
old <- carb(flag=rep(8,1000), var1=rep(8.255611e+00, 1000), var2=rep(2400e-06, 1000))
t2 <- Sys.time()
t3 <- Sys.time()
new <- carbex(flag=rep(8,1000), var1=rep(8.255611e+00, 1000), var2=rep(2400e-06, 1000))
t4 <- Sys.time()
print("Check times for 1000 lines of flag = 8")
print(paste("Time with carbex:", round(difftime(t1,t2,units="sec"), digits=1), "sec"))
print(paste("Time with carbex:", round(difftime(t3,t4,units="sec"), digits=1), "sec"))
source(/Volumes/Macintosh HD 2/gattuso/Documents/R-forge/seacarb_folder/test_time.r)
source("/Volumes/Macintosh HD 2/gattuso/Documents/R-forge/seacarb_folder/test_time.r")
source("/Volumes/Macintosh HD 2/gattuso/Documents/R-forge/seacarb_folder/check_seacarb/test_time.r")
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
require(ggplot2)
require(seacarb)
mytheme <- theme_grey() + theme(plot.title = element_text(colour = "black", size = 12, face = "bold"),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=10, face = "bold"),
axis.title.y = element_text(size=10, face = "bold"),
legend.position = "none"
)
tab <- read.table(file="seacarb_test_P0.txt", header=TRUE)
c <- carb(flag=tab$flag, var1=tab$var1, var2=tab$var2, S=tab$S, T=tab$T, P=tab$P, Sit=tab$Sit, Pt=tab$Pt)
plot_pH <- ggplot(data=c,aes(x=flag, y=pH-pH[[15]])) +
geom_point(aes(size = 20)) +
labs(title = "pH", x = "Flag", y = "Delta pH") +
mytheme
plot_pCO2 <- ggplot(data=c,aes(x=flag, y=pCO2-pCO2[[15]])) +
geom_point(aes(size = 20)) +
labs(title = "pCO2", x = "Flag", y = "Delta pCO2 (uatm)") +
mytheme
plot_HCO3 <- ggplot(data=c,aes(x=flag, y=1e6*(HCO3-HCO3[[15]]))) +
geom_point(aes(size = 20)) +
labs(title = "HCO3", x = "Flag", y = "Delta HCO3 (umol/kg)") +
mytheme
plot_CO3 <- ggplot(data=c,aes(x=flag, y=1e6*(CO3-CO3[[15]]))) +
geom_point(aes(size = 20)) +
labs(title = "CO3", x = "Flag", y = "Delta CO3 (umol/kg)") +
mytheme
plot_DIC <- ggplot(data=c,aes(x=flag, y=1e6*(DIC-DIC[[15]]))) +
geom_point(aes(size = 20)) +
labs(title = "DIC", x = "Flag", y = "Delta DIC (umol/kg)") +
mytheme
plot_ALK <- ggplot(data=c,aes(x=flag, y=1e6*(ALK-ALK[[15]]))) +
geom_point(aes(size = 20)) +
labs(title = "ALK", x = "Flag", y = "Delta ALK (umol/kg)") +
mytheme
png(paste("check", Sys.Date(), ".png", sep="_"),
width = 15, height = 20, units = "cm", res = 200)
multiplot(plot_pH, plot_pCO2, plot_HCO3, plot_CO3, plot_DIC, plot_ALK, cols=2)
dev.off()
setwd("/Volumes/Macintosh HD 2/gattuso/Documents/R-forge/seacarb_folder/check_seacarb/")
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
require(ggplot2)
require(seacarb)
mytheme <- theme_grey() + theme(plot.title = element_text(colour = "black", size = 12, face = "bold"),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=10, face = "bold"),
axis.title.y = element_text(size=10, face = "bold"),
legend.position = "none"
)
tab <- read.table(file="seacarb_test_P0.txt", header=TRUE)
c <- carb(flag=tab$flag, var1=tab$var1, var2=tab$var2, S=tab$S, T=tab$T, P=tab$P, Sit=tab$Sit, Pt=tab$Pt)
plot_pH <- ggplot(data=c,aes(x=flag, y=pH-pH[[15]])) +
geom_point(aes(size = 20)) +
labs(title = "pH", x = "Flag", y = "Delta pH") +
mytheme
plot_pCO2 <- ggplot(data=c,aes(x=flag, y=pCO2-pCO2[[15]])) +
geom_point(aes(size = 20)) +
labs(title = "pCO2", x = "Flag", y = "Delta pCO2 (uatm)") +
mytheme
plot_HCO3 <- ggplot(data=c,aes(x=flag, y=1e6*(HCO3-HCO3[[15]]))) +
geom_point(aes(size = 20)) +
labs(title = "HCO3", x = "Flag", y = "Delta HCO3 (umol/kg)") +
mytheme
plot_CO3 <- ggplot(data=c,aes(x=flag, y=1e6*(CO3-CO3[[15]]))) +
geom_point(aes(size = 20)) +
labs(title = "CO3", x = "Flag", y = "Delta CO3 (umol/kg)") +
mytheme
plot_DIC <- ggplot(data=c,aes(x=flag, y=1e6*(DIC-DIC[[15]]))) +
geom_point(aes(size = 20)) +
labs(title = "DIC", x = "Flag", y = "Delta DIC (umol/kg)") +
mytheme
plot_ALK <- ggplot(data=c,aes(x=flag, y=1e6*(ALK-ALK[[15]]))) +
geom_point(aes(size = 20)) +
labs(title = "ALK", x = "Flag", y = "Delta ALK (umol/kg)") +
mytheme
png(paste("check", Sys.Date(), ".png", sep="_"),
width = 15, height = 20, units = "cm", res = 200)
multiplot(plot_pH, plot_pCO2, plot_HCO3, plot_CO3, plot_DIC, plot_ALK, cols=2)
dev.off()
c <- carbex(flag=tab$flag, var1=tab$var1, var2=tab$var2, S=tab$S, T=tab$T, P=tab$P, Sit=tab$Sit, Pt=tab$Pt)
plot_pH <- ggplot(data=c,aes(x=flag, y=pH-pH[[15]])) +
geom_point(aes(size = 20)) +
labs(title = "pH", x = "Flag", y = "Delta pH") +
mytheme
plot_pCO2 <- ggplot(data=c,aes(x=flag, y=pCO2-pCO2[[15]])) +
geom_point(aes(size = 20)) +
labs(title = "pCO2", x = "Flag", y = "Delta pCO2 (uatm)") +
mytheme
plot_HCO3 <- ggplot(data=c,aes(x=flag, y=1e6*(HCO3-HCO3[[15]]))) +
geom_point(aes(size = 20)) +
labs(title = "HCO3", x = "Flag", y = "Delta HCO3 (umol/kg)") +
mytheme
plot_CO3 <- ggplot(data=c,aes(x=flag, y=1e6*(CO3-CO3[[15]]))) +
geom_point(aes(size = 20)) +
labs(title = "CO3", x = "Flag", y = "Delta CO3 (umol/kg)") +
mytheme
plot_DIC <- ggplot(data=c,aes(x=flag, y=1e6*(DIC-DIC[[15]]))) +
geom_point(aes(size = 20)) +
labs(title = "DIC", x = "Flag", y = "Delta DIC (umol/kg)") +
mytheme
plot_ALK <- ggplot(data=c,aes(x=flag, y=1e6*(ALK-ALK[[15]]))) +
geom_point(aes(size = 20)) +
labs(title = "ALK", x = "Flag", y = "Delta ALK (umol/kg)") +
mytheme
png(paste("check", Sys.Date(), ".png", sep="_"),
width = 15, height = 20, units = "cm", res = 200)
multiplot(plot_pH, plot_pCO2, plot_HCO3, plot_CO3, plot_DIC, plot_ALK, cols=2)
dev.off()
library(seacarb)
install.packages(c("bibtex", "class", "devtools", "directlabels", "evaluate", "formatR", "gtools", "Hmisc", "knitr", "labeling", "markdown", "MASS", "memisc", "munsell", "nlme", "nnet", "oce", "Rcpp", "spatial", "stargazer", "tm"))
